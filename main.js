!function(){"use strict";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button_type_submit",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_active"},e={url:"https://around-api.en.tripleten-services.com/v1",token:"9711a792-8332-4754-8b11-0fe0d4037fb9"};class s{constructor(t,e,s,o,n){let{name:i,link:r,_id:a,isLiked:l}=t;this._name=i,this._link=r,this._cardId=a,this._cardSelector=e,this._handleImageClick=s,this._handleApiCallback=o,this._handleDeleteButton=n,this._liked=l}_handleLikeButton=t=>{t.target.classList.contains("card__button-like_state_active")&&(this._callbackOptions={action:"DELETE",endpoint:`cards/${this._cardId}/likes`}),this._callbackOptions={action:"PUT",endpoint:`cards/${this._cardId}/likes`},this._handleApiCallback(this._callbackOptions).then((()=>t.target.classList.toggle("card__button-like_state_active"))).catch((t=>console.error(t)))};_handleDeletion=()=>{this._handleDeleteButton().then((t=>{t&&this._handleApiCallback({action:"DELETE",endpoint:`cards/${this._cardId}`}).then((()=>this._cardElement.remove()))})).catch((t=>console.error(t)))};_setEventListeners(){this._cardElement.querySelector(".card__button-like").addEventListener("click",this._handleLikeButton),this._cardElement.querySelector(".card__button-delete").addEventListener("click",this._handleDeletion),this._image.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}generateCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement.querySelector(".card__name").textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__button-like"),this._image=this._cardElement.querySelector(".card__image"),this._image.onload=this._image.classList.remove("card__placeholder"),this._image.src=this._link,this._image.alt=this._name,this._liked&&this._likeButton.classList.add("card__button-like_state_active"),this._setEventListeners(),this._cardElement}}class o{constructor(t,e){let{items:s,renderer:o}=t;this._items=s,this._renderer=o,this._container=document.querySelector(e)}addItem(t){this._container.prepend(t)}renderItems(){this._items.forEach((t=>this._renderer(t)))}setItems(t){this._items=t}}class n{constructor(t,e){this._settings=e,this._form=t}_showError(t){const e=this._form.querySelector(`.${t.id}-error`);e.classList.add(this._settings.errorClass),t.classList.add(this._settings.inputErrorClass),e.textContent=t.validationMessage}_hideError(t){const e=this._form.querySelector(`.${t.id}-error`);e.classList.remove(this._settings.errorClass),t.classList.remove(this._settings.inputErrorClass),e.textContent=""}_disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputsList.some((t=>!t.validity.valid))}_toggleButton(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_checkInputValidity(t){this._toggleButton();const e=t.target;e.validity.valid?this._hideError(e):this._showError(e)}_setInputsListener(){this._inputsList.forEach((t=>{t.addEventListener("input",(t=>this._checkInputValidity(t)))})),this._form.addEventListener("reset",(()=>{this._inputsList.forEach((t=>this._hideError(t))),this._disableButton()}))}resetValidation(){this._toggleButton(),this._inputsList.forEach((t=>this._hideError(t)))}enableValidation(){this._inputsList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._form.querySelector(this._settings.submitButtonSelector),this._setInputsListener()}}class i{constructor(t){this._modal=document.querySelector(t)}open(){this._modal.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modal.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"==t.key&&this.close()};_handleMouseClose=t=>{(t.target.classList.contains("modal__button_type_close")||t.target==this._modal)&&this.close()};setEventListeners(){this._modal.addEventListener("mousedown",this._handleMouseClose)}}class r extends i{constructor(t){let{selector:e,callback:s}=t;super(e),this._submitHandler=s,this._form=this._modal.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button_type_submit")}_getInputValues(){return this._formValues={},this._inputList.forEach((t=>this._formValues[t.name]=t.value)),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault();const e=this._submitButton.textContent;this._submitButton.textContent="Saving...",this._submitHandler(this._getInputValues()).then((()=>{super.close(),this._form.reset()})).catch((t=>console.error(t))).finally((()=>this._submitButton.textContent=e))}))}setInputsValues(t){this._inputList.forEach((e=>e.value=t[e.name]))}getForm(){return this._form}}class a extends i{constructor(t){super(t),this._image=this._modal.querySelector(".modal__image"),this._imageName=this._modal.querySelector(".modal__image-name")}open(t){let{name:e,link:s}=t;super.open(),this._image.src=s,this._image.alt=e,this._imageName.textContent=e}}class l extends i{constructor(t){super(t),this._confirmButton=document.getElementById("button-confirm")}open(){return super.open(),new Promise((t=>{this._isConfirmed=!1,this._resolve=t,this._handleConfirm=()=>{this._isConfirmed=!0,this._resolve(!0),this.close()},this._confirmButton.addEventListener("click",this._handleConfirm,{once:!0})}))}close(){this._isConfirmed||(this._resolve(!1),this._resolve=null),super.close()}}class c{constructor(t){let{nameSelector:e,aboutSelector:s,photoSelector:o}=t;this._name=document.querySelector(e),this._about=document.querySelector(s),this._avatarPhoto=document.querySelector(o)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(t){let{name:e,about:s,avatar:o}=t;this._name.textContent=e,this._about.textContent=s,o&&(this._avatarPhoto.onload=()=>{this._avatarPhoto.classList.remove("profile__photo_placeholder")},this._avatarPhoto.src=o)}}class d{constructor(t){let{url:e,token:s}=t;this._apiurl=e,this._options={headers:{authorization:s,"Content-Type":"application/json"}}}_genericFetch(t){let{method:e="GET",endpoint:s,body:o}=t;const n={...this._options,method:e};return o&&(n.body=JSON.stringify(o)),fetch(`${this._apiurl}/${s}`,n).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}getUser(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"users/me";return this._genericFetch({endpoint:t})}getCard(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"cards";return this._genericFetch({endpoint:t})}editUser(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"users/me";return this._genericFetch({method:"PATCH",endpoint:e,body:t})}editCard(t,e){return this._genericFetch({method:t,endpoint:e})}addCard(t){return this._genericFetch({method:"POST",endpoint:"cards",body:t})}}(()=>{let{editPopupSelector:i,addPopupSelector:_,confirmPopupSelector:h,nameSelector:u,aboutSelector:m,popupImageContainer:p,cardsContainer:b,buttonEditSelector:v,buttonAddSelector:g,photoSelector:E,editAvatarPopupSelector:f,profileAvatarSelector:S}={editPopupSelector:"#modal-edit",addPopupSelector:"#modal-add",confirmPopupSelector:"#modal-confirm",nameSelector:".profile__name",aboutSelector:".profile__description",popupImageContainer:"#modal-image-container",cardsContainer:".elements__list",buttonEditSelector:".profile__button_type_edit",buttonAddSelector:".profile__button_type_add",photoSelector:".profile__photo",editAvatarPopupSelector:"#modal-edit-avatar",profileAvatarSelector:".profile__avatar"};const L={},C=new a(p);C.setEventListeners();const k=new d(e),y=new c({nameSelector:u,aboutSelector:m,photoSelector:E}),I=t=>{C.open(t)},B=t=>{let{action:e,endpoint:s}=t;return k.editCard(e,s)},q=new l(h);q.setEventListeners();const w=t=>q.open(),P=t=>new s(t,"#card",I,B,w).generateCard(),V=new o({items:[],renderer:t=>{V.addItem(P(t))}},b),x=new r({selector:i,callback:t=>{const e={name:t["edit-name"],about:t["edit-job"]};return k.editUser(e).then((()=>y.setUserInfo(e)))}});x.setEventListeners();const U=new r({selector:_,callback:t=>{const e={name:t["add-name"],link:t["add-link"],avatar:y.getUserInfo().avatar};return k.addCard(e).then((t=>V.addItem(P(t))))}});U.setEventListeners();const A=new r({selector:f,callback:t=>{const{name:e,about:s}=y.getUserInfo(),o={name:e,about:s,avatar:t["edit-avatar"]};return k.editUser(o).then((()=>y.setUserInfo(o)))}});A.setEventListeners(),k.getUser().then((t=>{y.setUserInfo(t)})).catch((t=>console.error(t))),k.getCard().then((t=>{V.setItems(t.reverse()),V.renderItems()})).catch((t=>{console.error(t)})),(t=>{const e=[];e.push(x.getForm()),e.push(U.getForm()),e.push(A.getForm()),e.forEach((e=>{L[e.name]=new n(e,t),L[e.name].enableValidation()}))})(t),document.querySelector(S).addEventListener("mousedown",(()=>{A.open(),L[A.getForm().name].resetValidation()})),document.querySelector(v).addEventListener("click",(()=>{x.open(),(()=>{const{name:t,about:e}=y.getUserInfo();x.setInputsValues({"edit-name":t,"edit-job":e})})(),L[x.getForm().name].resetValidation()})),document.querySelector(g).addEventListener("click",(()=>{U.open(),L[U.getForm().name].resetValidation()}))})()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,